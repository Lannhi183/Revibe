{
  "info": {
    "name": "ReVibe API â€” Auth & Dev (with Scripts)",
    "_postman_id": "29b2eb4a-d3ef-4bda-98ca-84493f83d193",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "register"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"password\": \"{{PASSWORD}}\",\n  \"name\": \"Demo User\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 2xx\", function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Verify Email (OTP)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/verify-email",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "verify-email"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"otp\": \"{{OTP}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 2xx\", function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login (password)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"password\": \"{{PASSWORD}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Request OTP (login)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/request-otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "request-otp"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"purpose\": \"login\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// OTP sent"
                ]
              }
            }
          ]
        },
        {
          "name": "Verify OTP (login)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/verify-otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "verify-otp"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"otp\": \"{{OTP}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Access Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "refresh"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 2xx\", function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout (revoke refresh)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "logout"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// revoked"
                ]
              }
            }
          ]
        },
        {
          "name": "Me (requires Auth)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "me"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 2xx\", function () {",
                  "  pm.expect(pm.response.code).to.be.within(200, 299);",
                  "});",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.access_token) pm.collectionVariables.set(\"access_token\", json.access_token);",
                  "  if (json.refresh_token) pm.collectionVariables.set(\"refresh_token\", json.refresh_token);",
                  "  if (json.user && json.user.id) pm.collectionVariables.set(\"USER_ID\", json.user.id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        },
        {
          "name": "Request OTP (reset_password)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/request-otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "request-otp"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"purpose\": \"reset_password\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// OTP sent"
                ]
              }
            }
          ]
        },
        {
          "name": "Reset Password (OTP)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/reset-password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "reset-password"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"otp\": \"{{OTP}}\",\n  \"new_password\": \"{{PASSWORD}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// updated"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Dev",
      "item": [
        {
          "name": "Seed ALL",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/dev/seed-all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "dev",
                "seed-all"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.admin && json.admin._id) pm.collectionVariables.set(\"ADMIN_ID\", json.admin._id);",
                  "  if (json.seller && json.seller._id) pm.collectionVariables.set(\"SELLER_ID\", json.seller._id);",
                  "  if (json.buyer && json.buyer._id) pm.collectionVariables.set(\"USER_ID\", json.buyer._id);",
                  "  if (json.l1 && json.l1._id) pm.collectionVariables.set(\"LISTING_ID\", json.l1._id);",
                  "  if (json.order && json.order._id) pm.collectionVariables.set(\"ORDER_ID\", json.order._id);",
                  "  if (json.conv && json.conv._id) pm.collectionVariables.set(\"CONV_ID\", json.conv._id);",
                  "} catch (e) {}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Helpers",
      "item": [
        {
          "name": "Refresh Token (script)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "refresh"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status 200\", function(){ pm.expect(pm.response.code).to.eql(200); });",
                  "try { const json = pm.response.json(); if (json.access_token) pm.collectionVariables.set('access_token', json.access_token); } catch(e) {}"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Collection-level Pre-request Script",
          "if (!pm.request.headers.has('Authorization')) {",
          "  const token = pm.variables.get('access_token') || pm.environment.get('access_token') || pm.collectionVariables.get('access_token');",
          "  if (token) {",
          "    pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });",
          "  }",
          "}",
          "if (!pm.variables.get('baseUrl') && !pm.environment.get('baseUrl') && !pm.collectionVariables.get('baseUrl')) {",
          "  pm.collectionVariables.set('baseUrl', 'http://localhost:3000');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "EMAIL",
      "value": "buyer@revibe.vn"
    },
    {
      "key": "PASSWORD",
      "value": "secret123"
    },
    {
      "key": "OTP",
      "value": ""
    },
    {
      "key": "access_token",
      "value": ""
    },
    {
      "key": "refresh_token",
      "value": ""
    },
    {
      "key": "USER_ID",
      "value": ""
    },
    {
      "key": "SELLER_ID",
      "value": ""
    },
    {
      "key": "LISTING_ID",
      "value": ""
    },
    {
      "key": "ORDER_ID",
      "value": ""
    },
    {
      "key": "CONV_ID",
      "value": ""
    }
  ]
}